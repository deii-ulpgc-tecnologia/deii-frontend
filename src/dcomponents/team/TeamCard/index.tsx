"use client"

import React, { useState } from 'react'
import { Delegate } from '../../../types/db/delegate'
import { Box, Card, CardBody, Flex, Grid, Image, Text, Circle, Link } from '@chakra-ui/react'
import './teamCard.css';
interface Props {
    obj : Delegate
}

export default function TeamCard({obj}: Props) {    
    let snSize = 30;

    /* Si es honorario se devuelve el SVG de la corona */
    function isHonorary(): React.ReactNode {
        if(obj.isHonorary) {
            return (
            <Circle position='absolute' backgroundColor='#E99D38' size='55'>
                <svg width="30" height="30" viewBox={ '0 0 ' + snSize + ' ' + snSize}>
                    <path d="M28.7757 9.32977C28.5682 9.14882 28.3116 9.03363 28.0384 8.99882C27.7653 8.96401 27.488 9.01116 27.2417 9.13427L21.4678 12.0092L16.6471 4.002C16.5232 3.79654 16.3483 3.62657 16.1394 3.50859C15.9304 3.39061 15.6946 3.32861 15.4546 3.32861C15.2147 3.32861 14.9788 3.39061 14.7699 3.50859C14.5609 3.62657 14.386 3.79654 14.2621 4.002L9.44148 12.0126L3.66984 9.13772C3.42414 9.0157 3.14787 8.96897 2.87571 9.00338C2.60354 9.0378 2.34761 9.15183 2.14001 9.33117C1.93242 9.51051 1.78242 9.74717 1.70884 10.0114C1.63525 10.2757 1.64137 10.5558 1.7264 10.8167L5.98125 23.8526C6.02403 23.9836 6.09568 24.1033 6.19091 24.2028C6.28613 24.3024 6.40251 24.3793 6.53143 24.4279C6.66036 24.4764 6.79855 24.4954 6.9358 24.4834C7.07305 24.4714 7.20585 24.4288 7.32441 24.3586C7.35316 24.3413 10.2936 22.6474 15.4546 22.6474C20.6156 22.6474 23.5561 24.3413 23.5825 24.3574C23.7011 24.4283 23.8342 24.4715 23.9718 24.484C24.1094 24.4964 24.248 24.4776 24.3773 24.4291C24.5067 24.3806 24.6235 24.3036 24.719 24.2038C24.8145 24.104 24.8864 23.984 24.9291 23.8526L29.184 10.8201C29.2715 10.5592 29.2794 10.2782 29.2067 10.0128C29.134 9.74743 28.984 9.50966 28.7757 9.32977ZM20.956 18.5996C20.9185 18.8124 20.8072 19.0052 20.6417 19.1442C20.4762 19.2832 20.2671 19.3595 20.051 19.3597C19.9971 19.3596 19.9432 19.355 19.89 19.3459C16.9515 18.8415 13.9485 18.8415 11.01 19.3459C10.891 19.3669 10.7691 19.3643 10.6511 19.3381C10.5331 19.312 10.4214 19.2628 10.3225 19.1935C10.1225 19.0536 9.98641 18.8399 9.94401 18.5996C9.90162 18.3593 9.95644 18.1119 10.0964 17.912C10.2364 17.7121 10.45 17.576 10.6903 17.5336C13.8404 16.9923 17.0597 16.9923 20.2097 17.5336C20.3291 17.554 20.4433 17.5978 20.5458 17.6625C20.6482 17.7272 20.7369 17.8115 20.8066 17.9106C20.8764 18.0096 20.9259 18.1215 20.9524 18.2397C20.9788 18.358 20.9816 18.4803 20.9606 18.5996H20.956Z" fill="white"/>
                </svg>
            </Circle>
            );
        }else return '';
    }

    /* Devuelve los SVG de cada red Social con la configuraci√≥n necesaria */
    function chooseSNImg(name:string){
        switch(name){
            case 'Instagram':
                return (<>
                            <g clip-path="url(#clip0_601_227)">
                                <path d="M15.375 0.5H5.28125C2.82186 0.5 0.828125 2.49373 0.828125 4.95312V15.0469C0.828125 17.5063 2.82186 19.5 5.28125 19.5H15.375C17.8344 19.5 19.8281 17.5063 19.8281 15.0469V4.95312C19.8281 2.49373 17.8344 0.5 15.375 0.5Z" fill="url(#paint0_radial_601_227)"/>
                                <path d="M15.375 0.5H5.28125C2.82186 0.5 0.828125 2.49373 0.828125 4.95312V15.0469C0.828125 17.5063 2.82186 19.5 5.28125 19.5H15.375C17.8344 19.5 19.8281 17.5063 19.8281 15.0469V4.95312C19.8281 2.49373 17.8344 0.5 15.375 0.5Z" fill="url(#paint1_radial_601_227)"/>
                                <path d="M10.3288 2.57812C8.31316 2.57812 8.06015 2.58696 7.26853 2.62295C6.4784 2.65917 5.93905 2.78423 5.46717 2.96777C4.97896 3.15733 4.56489 3.41093 4.15238 3.82359C3.7395 4.23617 3.4859 4.65024 3.29575 5.13823C3.11169 5.61026 2.98648 6.14983 2.95093 6.93959C2.91553 7.73128 2.90625 7.98437 2.90625 10.0001C2.90625 12.0158 2.91516 12.268 2.95108 13.0596C2.98745 13.8497 3.1125 14.3891 3.2959 14.861C3.4856 15.3492 3.73921 15.7632 4.15186 16.1757C4.5643 16.5886 4.97836 16.8428 5.4662 17.0324C5.93846 17.2159 6.47788 17.341 7.26786 17.3772C8.05955 17.4132 8.31234 17.422 10.3279 17.422C12.3438 17.422 12.596 17.4132 13.3876 17.3772C14.1777 17.341 14.7176 17.2159 15.1899 17.0324C15.6779 16.8428 16.0914 16.5886 16.5037 16.1757C16.9166 15.7632 17.1701 15.3492 17.3604 14.8612C17.5428 14.3891 17.6681 13.8496 17.7052 13.0597C17.7407 12.2681 17.75 12.0158 17.75 10.0001C17.75 7.98437 17.7407 7.73143 17.7052 6.93974C17.6681 6.14961 17.5428 5.61033 17.3604 5.13845C17.1701 4.65024 16.9166 4.23617 16.5037 3.82359C16.0909 3.41079 15.678 3.15718 15.1895 2.96785C14.7163 2.78423 14.1767 2.6591 13.3865 2.62295C12.5948 2.58696 12.3428 2.57812 10.3265 2.57812H10.3288ZM9.66298 3.91562C9.86062 3.91532 10.0811 3.91562 10.3288 3.91562C12.3105 3.91562 12.5453 3.92275 13.3279 3.9583C14.0515 3.9914 14.4443 4.1123 14.7059 4.21391C15.0523 4.34839 15.2992 4.50922 15.5588 4.76906C15.8186 5.02883 15.9794 5.2762 16.1142 5.62258C16.2158 5.88383 16.3369 6.27659 16.3698 7.00023C16.4054 7.78264 16.4131 8.01762 16.4131 9.99837C16.4131 11.9791 16.4054 12.2142 16.3698 12.9965C16.3367 13.7201 16.2158 14.1129 16.1142 14.3742C15.9797 14.7206 15.8186 14.9672 15.5588 15.2269C15.2991 15.4866 15.0524 15.6474 14.7059 15.7819C14.4446 15.884 14.0515 16.0046 13.3279 16.0377C12.5455 16.0732 12.3105 16.081 10.3288 16.081C8.347 16.081 8.1121 16.0732 7.32976 16.0377C6.60613 16.0043 6.21336 15.8834 5.95152 15.7818C5.60521 15.6472 5.35777 15.4865 5.098 15.2267C4.83824 14.9669 4.67748 14.7202 4.54263 14.3736C4.44102 14.1123 4.31997 13.7195 4.28702 12.9959C4.25146 12.2135 4.24434 11.9785 4.24434 9.99651C4.24434 8.01457 4.25146 7.78079 4.28702 6.99837C4.32012 6.27474 4.44102 5.88197 4.54263 5.62035C4.67718 5.27397 4.83824 5.0266 5.09808 4.76684C5.35784 4.50707 5.60521 4.34624 5.95159 4.21146C6.21321 4.10941 6.60613 3.9888 7.32976 3.95555C8.01443 3.9246 8.27976 3.91532 9.66298 3.91377V3.91562ZM14.2906 5.14795C13.7989 5.14795 13.4 5.5465 13.4 6.03828C13.4 6.52998 13.7989 6.9289 14.2906 6.9289C14.7823 6.9289 15.1812 6.52998 15.1812 6.03828C15.1812 5.54658 14.7823 5.14765 14.2906 5.14765V5.14795ZM10.3288 6.18857C8.22395 6.18857 6.51736 7.89516 6.51736 10.0001C6.51736 12.105 8.22395 13.8108 10.3288 13.8108C12.4337 13.8108 14.1397 12.105 14.1397 10.0001C14.1397 7.89523 12.4336 6.18857 10.3286 6.18857H10.3288ZM10.3288 7.52607C11.6951 7.52607 12.8028 8.63363 12.8028 10.0001C12.8028 11.3664 11.6951 12.4741 10.3288 12.4741C8.96243 12.4741 7.85486 11.3664 7.85486 10.0001C7.85486 8.63363 8.96243 7.52607 10.3288 7.52607Z" fill="white"/>
                            </g>
                            <defs>
                                <radialGradient id="paint0_radial_601_227" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(5.875 20.9634) rotate(-90) scale(18.8304 17.5138)">
                                <stop stop-color="#FFDD55"/>
                                <stop offset="0.1" stop-color="#FFDD55"/>
                                <stop offset="0.5" stop-color="#FF543E"/>
                                <stop offset="1" stop-color="#C837AB"/>
                                </radialGradient>
                                <radialGradient id="paint1_radial_601_227" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-2.35445 1.86867) rotate(78.681) scale(8.4173 34.6964)">
                                <stop stop-color="#3771C8"/>
                                <stop offset="0.128" stop-color="#3771C8"/>
                                <stop offset="1" stop-color="#6600FF" stop-opacity="0"/>
                                </radialGradient>
                                <clipPath id="clip0_601_227">
                                <rect width="19" height="19" fill="white" transform="translate(0.828125 0.5)"/>
                                </clipPath>
                            </defs>
                            </>
                );
            case 'Facebook':
                return (<path d="M20.8281 10C20.8281 4.48 16.3481 0 10.8281 0C5.30813 0 0.828125 4.48 0.828125 10C0.828125 14.84 4.26813 18.87 8.82812 19.8V13H6.82812V10H8.82812V7.5C8.82812 5.57 10.3981 4 12.3281 4H14.8281V7H12.8281C12.2781 7 11.8281 7.45 11.8281 8V10H14.8281V13H11.8281V19.95C16.8781 19.45 20.8281 15.19 20.8281 10Z" fill="#1D90D1"/>);
            case 'GitHub':
                return (
                    <>
                    <g clip-path="url(#clip0_601_232)">
                            <path d="M7.63262 16.7996C7.63262 16.8816 7.53828 16.9473 7.41934 16.9473C7.28398 16.9596 7.18965 16.8939 7.18965 16.7996C7.18965 16.7176 7.28398 16.652 7.40293 16.652C7.52598 16.6396 7.63262 16.7053 7.63262 16.7996ZM6.35703 16.615C6.32832 16.6971 6.41035 16.7914 6.5334 16.816C6.64004 16.857 6.76309 16.816 6.7877 16.734C6.8123 16.652 6.73438 16.5576 6.61133 16.5207C6.50469 16.492 6.38574 16.533 6.35703 16.615ZM8.16992 16.5453C8.05098 16.574 7.96895 16.652 7.98125 16.7463C7.99355 16.8283 8.1002 16.8816 8.22324 16.8529C8.34219 16.8242 8.42422 16.7463 8.41191 16.6643C8.39961 16.5863 8.28887 16.533 8.16992 16.5453ZM10.8688 0.828125C5.17988 0.828125 0.828125 5.14707 0.828125 10.8359C0.828125 15.3846 3.69102 19.277 7.78027 20.6469C8.30527 20.7412 8.48984 20.4172 8.48984 20.1506C8.48984 19.8963 8.47754 18.4936 8.47754 17.6322C8.47754 17.6322 5.60645 18.2475 5.00352 16.41C5.00352 16.41 4.53594 15.2164 3.86328 14.9088C3.86328 14.9088 2.92402 14.2648 3.92891 14.2771C3.92891 14.2771 4.9502 14.3592 5.51211 15.3354C6.41035 16.9186 7.91563 16.4633 8.50215 16.1926C8.59648 15.5363 8.86309 15.0811 9.1584 14.8104C6.86563 14.5561 4.55234 14.2238 4.55234 10.2781C4.55234 9.1502 4.86406 8.58418 5.52031 7.8623C5.41367 7.5957 5.06504 6.49648 5.62695 5.07734C6.48418 4.81074 8.45703 6.18477 8.45703 6.18477C9.27734 5.95508 10.1592 5.83613 11.0328 5.83613C11.9064 5.83613 12.7883 5.95508 13.6086 6.18477C13.6086 6.18477 15.5814 4.80664 16.4387 5.07734C17.0006 6.50059 16.652 7.5957 16.5453 7.8623C17.2016 8.58828 17.6035 9.1543 17.6035 10.2781C17.6035 14.2361 15.1877 14.552 12.8949 14.8104C13.2723 15.1344 13.5922 15.7496 13.5922 16.7135C13.5922 18.0957 13.5799 19.8061 13.5799 20.1424C13.5799 20.409 13.7686 20.733 14.2895 20.6387C18.391 19.277 21.1719 15.3846 21.1719 10.8359C21.1719 5.14707 16.5576 0.828125 10.8688 0.828125ZM4.81484 14.9744C4.76152 15.0154 4.77383 15.1098 4.84355 15.1877C4.90918 15.2533 5.00352 15.282 5.05684 15.2287C5.11016 15.1877 5.09785 15.0934 5.02813 15.0154C4.9625 14.9498 4.86816 14.9211 4.81484 14.9744ZM4.37188 14.6422C4.34316 14.6955 4.38418 14.7611 4.46621 14.8021C4.53184 14.8432 4.61387 14.8309 4.64258 14.7734C4.67129 14.7201 4.63027 14.6545 4.54824 14.6135C4.46621 14.5889 4.40059 14.6012 4.37188 14.6422ZM5.70078 16.1023C5.63516 16.1557 5.65977 16.2787 5.7541 16.3566C5.84844 16.451 5.96738 16.4633 6.0207 16.3977C6.07402 16.3443 6.04941 16.2213 5.96738 16.1434C5.87715 16.049 5.7541 16.0367 5.70078 16.1023ZM5.2332 15.4994C5.16758 15.5404 5.16758 15.6471 5.2332 15.7414C5.29883 15.8357 5.40957 15.8768 5.46289 15.8357C5.52852 15.7824 5.52852 15.6758 5.46289 15.5814C5.40547 15.4871 5.29883 15.4461 5.2332 15.4994Z" fill="#3E3E3E"/>
                        </g>
                        <defs>
                            <clipPath id="clip0_601_232">
                            <rect width="20.3438" height="21" fill="white" transform="translate(0.828125 0.5)"/>
                            </clipPath>
                        </defs>
                    </> );
            case 'LinkedIn':
            case 'Telegram':
            default: return (<path d="m6.08.234.179.727a7.264 7.264 0 0 0-2.01.832l-.383-.643A7.9 7.9 0 0 1 6.079.234zm3.84 0L9.742.96a7.265 7.265 0 0 1 2.01.832l.388-.643A7.957 7.957 0 0 0 9.92.234zm-8.77 3.63a7.944 7.944 0 0 0-.916 2.215l.727.18a7.264 7.264 0 0 1 .832-2.01l-.643-.386zM.75 8a7.3 7.3 0 0 1 .081-1.086L.091 6.8a8 8 0 0 0 0 2.398l.74-.112A7.262 7.262 0 0 1 .75 8zm11.384 6.848-.384-.64a7.23 7.23 0 0 1-2.007.831l.18.728a7.965 7.965 0 0 0 2.211-.919zM15.251 8c0 .364-.028.727-.082 1.086l.74.112a7.966 7.966 0 0 0 0-2.398l-.74.114c.054.36.082.722.082 1.086zm.516 1.918-.728-.18a7.252 7.252 0 0 1-.832 2.012l.643.387a7.933 7.933 0 0 0 .917-2.219zm-6.68 5.25c-.72.11-1.453.11-2.173 0l-.112.742a7.99 7.99 0 0 0 2.396 0l-.112-.741zm4.75-2.868a7.229 7.229 0 0 1-1.537 1.534l.446.605a8.07 8.07 0 0 0 1.695-1.689l-.604-.45zM12.3 2.163c.587.432 1.105.95 1.537 1.537l.604-.45a8.06 8.06 0 0 0-1.69-1.691l-.45.604zM2.163 3.7A7.242 7.242 0 0 1 3.7 2.163l-.45-.604a8.06 8.06 0 0 0-1.691 1.69l.604.45zm12.688.163-.644.387c.377.623.658 1.3.832 2.007l.728-.18a7.931 7.931 0 0 0-.916-2.214zM6.913.831a7.254 7.254 0 0 1 2.172 0l.112-.74a7.985 7.985 0 0 0-2.396 0l.112.74zM2.547 14.64 1 15l.36-1.549-.729-.17-.361 1.548a.75.75 0 0 0 .9.902l1.548-.357-.17-.734zM.786 12.612l.732.168.25-1.073A7.187 7.187 0 0 1 .96 9.74l-.727.18a8 8 0 0 0 .736 1.902l-.184.79zm3.5 1.623-1.073.25.17.731.79-.184c.6.327 1.239.574 1.902.737l.18-.728a7.197 7.197 0 0 1-1.962-.811l-.007.005zM8 1.5a6.502 6.502 0 0 0-6.498 6.502 6.516 6.516 0 0 0 .998 3.455l-.625 2.668L4.54 13.5a6.502 6.502 0 0 0 6.93-11A6.516 6.516 0 0 0 8 1.5"/>)
        }
    }

    /* Inserta las redes sociales que tenga el ususario dentro de la carta */
    function addSocialNetwork(){
        let showSocialNetworks:any[] = [];
        obj.socialNetworks.forEach((sn) => {
            showSocialNetworks.push(
                <Link href={sn.url} w='50' isExternal  cursor='pointer' textDecoration='none'>
                    <svg className="rrss" width={snSize} height={snSize} viewBox={ '0 0 ' + snSize + ' ' + snSize} >
                        {chooseSNImg(sn.network.name)}
                    </svg> 
                </Link>
            )
        })
        return showSocialNetworks;
    }

    return (
        /* A la hora de implementarlo puede que haya que cambiar la altura del componente a 100% */
        <Card w={obj.isHonorary ? '350px' :'290px'} h={obj.isHonorary ? '385px' :'300px'} borderRadius='50px' boxShadow='0px 4px 65px 0px rgba(0, 0, 0, 0.1)'>
            <CardBody>
                <Grid justifyItems='center' alignItems= 'center' h='100%'>
                    <Box position='relative'>
                        {isHonorary()}
                        <Image w={obj.isHonorary ? '200px' :'150px'} h={obj.isHonorary ? '200px' :'150px'} marginBottom='5' objectFit='cover' src={obj.avatar} alt={"Avatar de " + obj.name} borderRadius='50%'/> 
                    </Box>
                    <Grid justifyItems='center' alignItems= 'center'>
                        <Text fontSize='lg' fontWeight='bolder'>{obj.name ? obj.name : ''}</Text>
                        <Text fontSize='md' color='#6F6F6F'>{obj.rol ? obj.rol : ''}</Text>
                    </Grid>
                    <Flex marginTop='5' columnGap='5px' h='50'>
                        {addSocialNetwork()}
                    </Flex>
                </Grid>
            </CardBody>
        </Card>
    )
}